--------------------------------------------------------命令行dir     列出当前目录下的所以内容cd  目录  进入某个目录.       当前目录..      上一级目录md 目录名    创建文件夹rd           删除文件夹输入文件名   打开文件c:      进入C盘d:e:f:----------------------------------------------------------------------------------------------------------------进程和线程    进程        - 进程负责为程序的运行提供必备的环境        - 相当于工厂中的车间    线程        - 线程是计算机的最小的计算单位，负责执行进程中的程序        - 相当于工厂中的工人    单线程        - js，浏览器是单线程    多线程        - java----------------------------------------------------------------------------------------------------------------javascript    - 在浏览器中运行node.js      Ryan Dahl——瑞安 达尔   2009年2月web.js    - 能在服务器端运行javascript    - 采用Google开发的V8引擎运行js代码    - 使用事件驱动、非阻塞和异步I/O高并发性能问题：同一时间有巨大的访问量--------------------------------------------------------node执行js文件    * 进入文件目录    * node+js文件名--------------------------------------------------------06 module模块化 低耦合在node中一个js就是一个模块通过require() 函数来引入外部的模块，可以传递一个文件的路径作为参数，如果使用相对路径，必须以./或../开头    * var md = require(./module.js)使用require()引入模块后，该函数会返回一个对象，这个对象代表的是引入的模块在node中，每一个js文件的js代码都是独立运行在一个函数中，而不是全局作用域，所以一个模块中的变量和函数在其他模块中无法访问    使用exports来向外部暴露属性和方法    只需要将需要暴露给外部的变量或方法设置为exports的属性即可    *  exports.x = 1    *  exports.y = 'hello'    *  exports.fn = function(){}--------------------------------------------------------09 package* json文件内不能写注释--------------------------------------------------------10 npm（Node Package Manager）    node包管理器npm帮助node完成了第三方模块的发布、安装和依赖npm -v                  查看npm版本npm version             查看所有模块的版本npm search 包名         搜索包npm install/i 包名      在当前目录安装包模块    install可以简写成inpm install 包名 -g     全局模式安装包（全局安装的包一般都是一些工具，一般不在项目中使用）npm install 包名 --save 安装包并添加到package.json里的dependencies依赖中npm install             会安装所有在package.json里的dependencies依赖中的包npm init                创建package.jsonnpm remove/r  包名      删除包