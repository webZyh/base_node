关系型数据库（RDBMS）
    * MySQL、Oracle、DB2、SQL Server
    * 关系型数据库中全是表
非关系型数据库（No SQL）：SQL结构化关系语言
    * MongoDB、Redis
    * 键值对数据库
    * 文档数据库MongoDB
--------------------------------------------------------------------------------
设计目标：极简、灵活、作为Web应用栈的一部分
BSON（二进制JSON，类似于JSON）
安装MongoDB
    * 下载安装
    * 配置环境变量：输入mongod检测是否配置成功
    * 在C盘根目录
        创建一个data文件夹
        在data中创建一个db文件夹
    * 启动MongoDB：mongod
        再打开一个cmd窗口，输入mongo,连接MongoDB
--------------------------------------------------------------------------------
3、将mongodb设置为系统服务，配置mongodb自启动
默认端口27017
数据库（database）
    * 数据库的服务器
        * 服务器用来保存数据
        * mongod 用来启动服务器
    * 数据库的客户端
        * 客户端用来操作服务器，对数据进行增删改查的操作
        * mongo 用来启动客户端
将mongodb设置为系统服务，可以自动在后台启动，不需要每次都手动启动
    1.在c盘根目录创建data
        - 在data下创建db和log文件夹
    2.创建配置文件
        在目录 C:\Program Files\MongoDB\Server\3.2 下添加一个配置文件
        mongod.cfg
    3.以管理员的身份打开命令行窗口

    4.执行如下的命令
sc.exe create MongoDB binPath= "\"C:\Program Files\MongoDB\Server\3.2\bin\mongod.exe\" --service --config=\"C:\Program Files\MongoDB\Server\3.2\mongod.cfg\"" DisplayName= "MongoDB" start= "auto"



        sc.exe create MongoDB binPath= "\"F:\zyh\Program Files\MongoDB\Server\3.2\bin\mongod.exe\" --service --config=\"F:\zyh\Program Files\MongoDB\Server\3.2\mongod.cfg\"" DisplayName= "MongoDB" start= "auto"

        sc.exe create MongoDB binPath= "\"mongod的bin目录\mongod.exe\" --service --config=\"mongo的安装目录\mongod.cfg\"" DisplayName= "MongoDB" start= "auto"

    5.启动mongodb服务

    6.如果启动失败，证明上边的操作有误，
        在控制台输入 sc delete MongoDB 删除之前配置的服务
        然后从第一步再来一次

设置数据库路径以及端口号
mongod --dbpath 路径 --port 端口号
该路径为创建的data->db路径


--------------------------------------------------------------------------------
- 基本概念
    数据库（database）
    集合（collection）
    文档（document）
        - 在MongoDB中，数据库和集合都不需要手动创建，
            当我们创建文档时，如果文档所在的集合或数据库不存在会自动创建数据库和集合

- 基本指令
    show dbs
    show databases
        - 显示当前的所有数据库
    use 数据库名
        - 进入到指定的数据库中
    db
        - db表示的是当前所处的数据库
    show collections
        - 显示数据库中所有的集合

- 数据库的CRUD（增删改查）的操作
    - 向数据库中插入文档
        db.<collection>.insert(doc)
            - 向集合中插入一个文档
            - 例子：向test数据库中的，stus集合中插入一个新的学生对象
                {name:"孙悟空",age:18,gender:"男"}
                db.stus.insert({name:"孙悟空",age:18,gender:"男"})

        db.<collection>.find()
            - 查询当前集合中的所有的文档
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
